// Naive approach that randomly swaps target shapes
// Iterates through the arrays of data for the two datasets, selecting pairs of shapes at random,
// and swaps these shapes if and only if it improves the fit of the shapes

for (i in 0...10) {
//	for (shape in shapes) {
//				var other:CircleSprite = FlxG.random.getObject(shapes.members);
//				var currentScore:Float = CostFunctions.calculateScore(shape.startData, shape.endData) + CostFunctions.calculateScore(other.startData, other.endData);
//				var swappedScore:Float = CostFunctions.calculateScore(shape.startData, other.endData) + CostFunctions.calculateScore(shape.endData, other.startData);

//				if (swappedScore < currentScore) {
//					swap(shape, other);
//				}
//	}
}